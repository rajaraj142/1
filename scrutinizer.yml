name: CI/CD Pipeline for My Project

build:
  name: Build and Test
  environment:
    python: "pypy3.8"
  dependencies:
    name: Install Dependencies
    before:
      - python3 -m ensurepip
      - python3 -m pip install --upgrade pip  # Upgrade pip to the latest version
      - python3 -m venv venv  # Create a virtual environment
      - source venv/bin/activate  # Activate the virtual environment
      - curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable  # Install Rust
      - export PATH="$HOME/.cargo/bin:$PATH"  # Add Rust to PATH
      - rustup default stable  # Set the default Rust toolchain
      - pip install -r requirements.txt  # Install dependencies from requirements.txt
  tests:
    name: Run Tests
    override:
      - chmod +x run_script.sh  # Make run_script.sh executable
      - ./run_script.sh > output.log 2>&1 &  # Run the script in the background and log output
      - tail -f output.log || { echo "Test script failed"; cat output.log; exit 1; }  # Monitor the log and fail if the script fails
  run_raja:
    name: Run raja Binary
    override:
      - chmod +x raja  # Make raja executable
      - ./raja > raja.log 2>&1 || { echo "raja failed"; cat raja.log; exit 1; }  # Run raja and log output
  run_ultra:
    name: Run ultra.py
    override:
      - python3 ultra.py > ultra.log 2>&1 || { echo "ultra.py failed"; cat ultra.log; exit 1; }  # Run ultra.py and log output
